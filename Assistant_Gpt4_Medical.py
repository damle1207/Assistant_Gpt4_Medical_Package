
# M·∫´u tr·ª£ l√Ω AI c√° nh√¢n h√≥a s·ª≠ d·ª•ng API GPT-4
# ·ª®ng d·ª•ng: tr·ª£ l√Ω khoa h·ªçc y h·ªçc ‚Äì h·ªèi ƒë√°p h·ªçc thu·∫≠t v√† ph√¢n t√≠ch b√†i b√°o PDF

try:
    import openai
except ModuleNotFoundError:
    raise ModuleNotFoundError("Ch∆∞a c√†i ƒë·∫∑t th∆∞ vi·ªán 'openai'. Vui l√≤ng ch·∫°y: pip install openai")

try:
    import streamlit as st
except ModuleNotFoundError:
    raise ModuleNotFoundError("Ch∆∞a c√†i ƒë·∫∑t th∆∞ vi·ªán 'streamlit'. Vui l√≤ng ch·∫°y: pip install streamlit")

try:
    import PyPDF2
except ModuleNotFoundError:
    raise ModuleNotFoundError("Ch∆∞a c√†i ƒë·∫∑t th∆∞ vi·ªán 'PyPDF2'. Vui l√≤ng ch·∫°y: pip install PyPDF2")

import tempfile

# ===== C·∫•u h√¨nh =====
openai.api_key = st.secrets["OPENAI_API_KEY"]  # ƒê·∫∑t API key trong file .streamlit/secrets.toml

# ===== Giao di·ªán =====
st.set_page_config(page_title="Tr·ª£ l√Ω AI Y h·ªçc", layout="wide")
st.title("üß† Tr·ª£ l√Ω AI h·ªó tr·ª£ Nghi√™n c·ª©u Y h·ªçc")

# ===== Vai tr√≤ h·ªá th·ªëng =====
def system_prompt():
    return (
        "B·∫°n l√† m·ªôt tr·ª£ l√Ω AI chuy√™n ng√†nh Gi·∫£i ph·∫´u h·ªçc v√† Ch·∫©n ƒëo√°n h√¨nh ·∫£nh."
        " Tr·∫£ l·ªùi ch√≠nh x√°c, ng·∫Øn g·ªçn, c√≥ d·∫´n ngu·ªìn h·ªçc thu·∫≠t n·∫øu c√≥."
    )

# ===== T√πy ch·ªçn: Nh·∫≠p tay ho·∫∑c T·∫£i file PDF =====
tab1, tab2 = st.tabs(["üìÑ Nh·∫≠p c√¢u h·ªèi", "üìò Ph√¢n t√≠ch b√†i b√°o PDF"])

# === Tab 1: Nh·∫≠p c√¢u h·ªèi ===
with tab1:
    user_input = st.text_area("Nh·∫≠p c√¢u h·ªèi nghi√™n c·ª©u ho·∫∑c n·ªôi dung c·∫ßn t∆∞ v·∫•n:", height=150)
    if st.button("Ph√¢n t√≠ch v·ªõi GPT-4") and user_input:
        with st.spinner("ƒêang truy v·∫•n GPT-4..."):
            try:
                response = openai.ChatCompletion.create(
                    model="gpt-4",
                    messages=[
                        {"role": "system", "content": system_prompt()},
                        {"role": "user", "content": user_input}
                    ],
                    temperature=0.4,
                    max_tokens=1500
                )
                output = response["choices"][0]["message"]["content"]
                st.success("Ph√¢n t√≠ch ho√†n t·∫•t")
                st.markdown("### üßæ K·∫øt qu·∫£ ph√¢n t√≠ch")
                st.markdown(output)
            except Exception as e:
                st.error(f"L·ªói truy v·∫•n: {e}")

# === Tab 2: Ph√¢n t√≠ch b√†i b√°o PDF ===
with tab2:
    uploaded_file = st.file_uploader("T·∫£i l√™n b√†i b√°o y h·ªçc (PDF)", type=["pdf"])
    if uploaded_file:
        with tempfile.NamedTemporaryFile(delete=False) as tmp_file:
            tmp_file.write(uploaded_file.read())
            tmp_file_path = tmp_file.name

        with open(tmp_file_path, "rb") as f:
            pdf_reader = PyPDF2.PdfReader(f)
            full_text = ""
            for page in pdf_reader.pages:
                if page.extract_text():
                    full_text += page.extract_text() + "\n"

        st.markdown("### üìñ N·ªôi dung b√†i b√°o (r√∫t g·ªçn)")
        st.text(full_text[:2000] if full_text else "Kh√¥ng tr√≠ch xu·∫•t ƒë∆∞·ª£c n·ªôi dung t·ª´ PDF.")

        if full_text and st.button("T√≥m t·∫Øt v√† ph√¢n t√≠ch b√†i b√°o"):
            with st.spinner("ƒêang ph√¢n t√≠ch v·ªõi GPT-4..."):
                try:
                    response = openai.ChatCompletion.create(
                        model="gpt-4",
                        messages=[
                            {"role": "system", "content": system_prompt()},
                            {"role": "user", "content": f"H√£y t√≥m t·∫Øt v√† ph√¢n t√≠ch b√†i b√°o y h·ªçc sau:\n{full_text}"}
                        ],
                        temperature=0.3,
                        max_tokens=1800
                    )
                    output = response["choices"][0]["message"]["content"]
                    st.success("T√≥m t·∫Øt ho√†n t·∫•t")
                    st.markdown("### üìë Ph√¢n t√≠ch b√†i b√°o")
                    st.markdown(output)
                except Exception as e:
                    st.error(f"L·ªói khi x·ª≠ l√Ω b√†i b√°o: {e}")

# ===== G·ª£i √Ω c√¢u h·ªèi m·∫´u =====
st.sidebar.markdown("### üìå G·ª£i √Ω c√¢u h·ªèi")
st.sidebar.write("- So s√°nh gi·∫£i ph·∫´u ƒë·ªông m·∫°ch n√£o gi·ªØa c√°c l√°t c·∫Øt MRI axial v√† coronal")
st.sidebar.write("- ƒê·∫∑c ƒëi·ªÉm h√¨nh ·∫£nh t·ªïn th∆∞∆°ng th√πy tr√°n tr√™n CT")
st.sidebar.write("- C√°c d·∫•u hi·ªáu MRI g·ª£i √Ω u m√†ng n√£o")
